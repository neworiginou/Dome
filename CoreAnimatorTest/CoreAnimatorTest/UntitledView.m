//
// UntitledView.m
// Generated by Core Animator version 1.0.3 on 15/4/24.
//
// DO NOT MODIFY THIS FILE. IT IS AUTO-GENERATED AND WILL BE OVERWRITTEN
//

#import "UntitledView.h"

@interface UntitledView ()
@property (strong, nonatomic) NSMapTable *completionBlocksByAnimation;
@end

@implementation UntitledView

#pragma mark - Life Cycle

- (instancetype)init
{
	return [self initWithFrame:CGRectMake(0,0,1136,768)];
}

- (instancetype)initWithFrame:(CGRect)frame
{
	self = [super initWithFrame:frame];
	if (self)
	{
		[self setupHierarchy];
	}
	return self;
}

- (instancetype)initWithCoder:(NSCoder *)coder
{
	self = [super initWithCoder:coder];
	if (self)
	{
		[self setupHierarchy];
	}
	return self;
}

#pragma mark - Scaling

- (void)layoutSubviews
{
	[super layoutSubviews];

	UIView *scalingView = self.viewsByName[@"__scaling__"];
	float xScale = self.bounds.size.width / scalingView.bounds.size.width;
	float yScale = self.bounds.size.height / scalingView.bounds.size.height;
	switch (self.contentMode) {
		case UIViewContentModeScaleToFill:
			break;
		case UIViewContentModeScaleAspectFill:
		{
			float scale = MAX(xScale, yScale);
			xScale = scale;
			yScale = scale;
			break;
		}
		default:
		{
			float scale = MIN(xScale, yScale);
			xScale = scale;
			yScale = scale;
			break;
		}
	}
	scalingView.transform = CGAffineTransformMakeScale(xScale, yScale);
	scalingView.center = CGPointMake(CGRectGetMidX(self.bounds), CGRectGetMidY(self.bounds));
}

#pragma mark - Setup

- (void)setupHierarchy
{
	self.completionBlocksByAnimation = [NSMapTable mapTableWithKeyOptions:NSPointerFunctionsOpaqueMemory valueOptions:NSPointerFunctionsStrongMemory];
	NSMutableDictionary *viewsByName = [NSMutableDictionary dictionary];
	NSBundle *bundle = [NSBundle bundleForClass:[self class]];

	UIView *__scaling__ = [UIView new];
	__scaling__.bounds = CGRectMake(0, 0, 1136, 768);
	__scaling__.center = CGPointMake(568.0, 384.0);
	[self addSubview:__scaling__];
	viewsByName[@"__scaling__"] = __scaling__;

	UIView *untitled = [UIView new];
	untitled.bounds = CGRectMake(0, 0, 16.0, 27.0);
	untitled.layer.position = CGPointMake(568.000, 384.000);
	[__scaling__ addSubview:untitled];
	viewsByName[@"Untitled"] = untitled;

	UIImageView *loading = [UIImageView new];
	loading.bounds = CGRectMake(0, 0, 16.0, 27.0);
	UIImage *imgLoading = [UIImage imageWithContentsOfFile:[bundle pathForResource:@"loading.png" ofType:nil]];
	loading.image = imgLoading;
	loading.contentMode = UIViewContentModeCenter;
	loading.layer.position = CGPointMake(8.000, 13.500);
	[untitled addSubview:loading];
	viewsByName[@"loading"] = loading;

	self.viewsByName = viewsByName;
}

#pragma mark - down

- (void)addDownAnimation
{
	[self addDownAnimationWithBeginTime:0 andFillMode:kCAFillModeBoth andRemoveOnCompletion:NO completion:NULL];
}

- (void)addDownAnimationWithCompletion:(void (^)(BOOL finished))completionBlock
{
	[self addDownAnimationWithBeginTime:0 andFillMode:kCAFillModeBoth andRemoveOnCompletion:NO completion:completionBlock];
}

- (void)addDownAnimationAndRemoveOnCompletion:(BOOL)removedOnCompletion
{
	[self addDownAnimationWithBeginTime:0 andFillMode:removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth andRemoveOnCompletion:removedOnCompletion completion:NULL];
}

- (void)addDownAnimationAndRemoveOnCompletion:(BOOL)removedOnCompletion completion:(void (^)(BOOL finished))completionBlock
{
	[self addDownAnimationWithBeginTime:0 andFillMode:removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth andRemoveOnCompletion:removedOnCompletion completion:completionBlock];
}

- (void)addDownAnimationWithBeginTime:(CFTimeInterval)beginTime andFillMode:(NSString *)fillMode andRemoveOnCompletion:(BOOL)removedOnCompletion completion:(void (^)(BOOL finished))completionBlock
{
	CAMediaTimingFunction *linearTiming = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionLinear];
	CAMediaTimingFunction *anticOverTiming = [CAMediaTimingFunction functionWithControlPoints:0.42 :-0.30 :0.58 :1.30];

	if (completionBlock)
	{
		CABasicAnimation *representativeAnimation = [CABasicAnimation animationWithKeyPath:@"not.a.real.key"];
		representativeAnimation.duration = 5.000;
		representativeAnimation.delegate = self;
		[self.layer addAnimation:representativeAnimation forKey:@"Down"];
		[self.completionBlocksByAnimation setObject:completionBlock forKey:[self.layer animationForKey:@"Down"]];
	}

	CAKeyframeAnimation *untitledScaleXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.x"];
	untitledScaleXAnimation.duration = 5.000;
	untitledScaleXAnimation.values = @[@(9.923), @(1.000), @(1.000)];
	untitledScaleXAnimation.keyTimes = @[@(0.000), @(0.100), @(1.000)];
	untitledScaleXAnimation.timingFunctions = @[linearTiming, linearTiming];
	untitledScaleXAnimation.beginTime = beginTime;
	untitledScaleXAnimation.fillMode = fillMode;
	untitledScaleXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"Untitled"] layer] addAnimation:untitledScaleXAnimation forKey:@"down_ScaleX"];

	CAKeyframeAnimation *untitledScaleYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.y"];
	untitledScaleYAnimation.duration = 5.000;
	untitledScaleYAnimation.values = @[@(8.877), @(1.000), @(1.000)];
	untitledScaleYAnimation.keyTimes = @[@(0.000), @(0.100), @(1.000)];
	untitledScaleYAnimation.timingFunctions = @[linearTiming, linearTiming];
	untitledScaleYAnimation.beginTime = beginTime;
	untitledScaleYAnimation.fillMode = fillMode;
	untitledScaleYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"Untitled"] layer] addAnimation:untitledScaleYAnimation forKey:@"down_ScaleY"];

	CAKeyframeAnimation *untitledTranslationXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.x"];
	untitledTranslationXAnimation.duration = 5.000;
	untitledTranslationXAnimation.values = @[@(71.381), @(0.000), @(0.000)];
	untitledTranslationXAnimation.keyTimes = @[@(0.000), @(0.100), @(1.000)];
	untitledTranslationXAnimation.timingFunctions = @[linearTiming, linearTiming];
	untitledTranslationXAnimation.beginTime = beginTime;
	untitledTranslationXAnimation.fillMode = fillMode;
	untitledTranslationXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"Untitled"] layer] addAnimation:untitledTranslationXAnimation forKey:@"down_TranslationX"];

	CAKeyframeAnimation *untitledTranslationYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.y"];
	untitledTranslationYAnimation.duration = 5.000;
	untitledTranslationYAnimation.values = @[@(106.342), @(0.000), @(0.000)];
	untitledTranslationYAnimation.keyTimes = @[@(0.000), @(0.100), @(1.000)];
	untitledTranslationYAnimation.timingFunctions = @[linearTiming, linearTiming];
	untitledTranslationYAnimation.beginTime = beginTime;
	untitledTranslationYAnimation.fillMode = fillMode;
	untitledTranslationYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"Untitled"] layer] addAnimation:untitledTranslationYAnimation forKey:@"down_TranslationY"];

	CAKeyframeAnimation *loadingRotationAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.rotation.z"];
	loadingRotationAnimation.duration = 5.000;
	loadingRotationAnimation.values = @[@(3.142), @(0.000), @(3.071), @(3.919), @(6.014), @(19.837)];
	loadingRotationAnimation.keyTimes = @[@(0.000), @(0.003), @(0.100), @(0.170), @(0.426), @(1.000)];
	loadingRotationAnimation.timingFunctions = @[linearTiming, anticOverTiming, linearTiming, linearTiming, linearTiming];
	loadingRotationAnimation.beginTime = beginTime;
	loadingRotationAnimation.fillMode = fillMode;
	loadingRotationAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"loading"] layer] addAnimation:loadingRotationAnimation forKey:@"down_Rotation"];

	CAKeyframeAnimation *loadingOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	loadingOpacityAnimation.duration = 5.000;
	loadingOpacityAnimation.values = @[@(1.000), @(1.000)];
	loadingOpacityAnimation.keyTimes = @[@(0.000), @(1.000)];
	loadingOpacityAnimation.timingFunctions = @[linearTiming];
	loadingOpacityAnimation.beginTime = beginTime;
	loadingOpacityAnimation.fillMode = fillMode;
	loadingOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"loading"] layer] addAnimation:loadingOpacityAnimation forKey:@"down_Opacity"];

	CAKeyframeAnimation *loadingImageContentsAnimation = [CAKeyframeAnimation animationWithKeyPath:@"contents"];
	loadingImageContentsAnimation.duration = 5.000;
	loadingImageContentsAnimation.values = @[(id)[UIImage imageNamed:@"loading"].CGImage, (id)[UIImage imageNamed:@"loading"].CGImage];
	loadingImageContentsAnimation.keyTimes = @[@(0.000), @(1.000)];
	loadingImageContentsAnimation.timingFunctions = @[linearTiming];
	loadingImageContentsAnimation.beginTime = beginTime;
	loadingImageContentsAnimation.fillMode = fillMode;
	loadingImageContentsAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"loading"] layer] addAnimation:loadingImageContentsAnimation forKey:@"down_ImageContents"];

	CAKeyframeAnimation *loadingScaleXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.x"];
	loadingScaleXAnimation.duration = 5.000;
	loadingScaleXAnimation.values = @[@(1.000), @(1.000), @(12.930), @(2.919), @(11.594)];
	loadingScaleXAnimation.keyTimes = @[@(0.000), @(0.100), @(0.170), @(0.426), @(1.000)];
	loadingScaleXAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming];
	loadingScaleXAnimation.beginTime = beginTime;
	loadingScaleXAnimation.fillMode = fillMode;
	loadingScaleXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"loading"] layer] addAnimation:loadingScaleXAnimation forKey:@"down_ScaleX"];

	CAKeyframeAnimation *loadingScaleYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.y"];
	loadingScaleYAnimation.duration = 5.000;
	loadingScaleYAnimation.values = @[@(1.000), @(1.000), @(6.190), @(1.999), @(7.256)];
	loadingScaleYAnimation.keyTimes = @[@(0.000), @(0.100), @(0.170), @(0.426), @(1.000)];
	loadingScaleYAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming];
	loadingScaleYAnimation.beginTime = beginTime;
	loadingScaleYAnimation.fillMode = fillMode;
	loadingScaleYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"loading"] layer] addAnimation:loadingScaleYAnimation forKey:@"down_ScaleY"];

	CAKeyframeAnimation *loadingTranslationXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.x"];
	loadingTranslationXAnimation.duration = 5.000;
	loadingTranslationXAnimation.values = @[@(-22.343), @(0.000), @(95.440), @(276.869), @(-151.852)];
	loadingTranslationXAnimation.keyTimes = @[@(0.000), @(0.100), @(0.170), @(0.426), @(1.000)];
	loadingTranslationXAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming];
	loadingTranslationXAnimation.beginTime = beginTime;
	loadingTranslationXAnimation.fillMode = fillMode;
	loadingTranslationXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"loading"] layer] addAnimation:loadingTranslationXAnimation forKey:@"down_TranslationX"];

	CAKeyframeAnimation *loadingTranslationYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.y"];
	loadingTranslationYAnimation.duration = 5.000;
	loadingTranslationYAnimation.values = @[@(-20.731), @(0.000), @(-70.065), @(225.485), @(-92.548)];
	loadingTranslationYAnimation.keyTimes = @[@(0.000), @(0.100), @(0.170), @(0.426), @(1.000)];
	loadingTranslationYAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming];
	loadingTranslationYAnimation.beginTime = beginTime;
	loadingTranslationYAnimation.fillMode = fillMode;
	loadingTranslationYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"loading"] layer] addAnimation:loadingTranslationYAnimation forKey:@"down_TranslationY"];
}

- (void)removeDownAnimation
{
	[self.layer removeAnimationForKey:@"Down"];
	[[self.viewsByName[@"Untitled"] layer] removeAnimationForKey:@"down_ScaleX"];
	[[self.viewsByName[@"Untitled"] layer] removeAnimationForKey:@"down_ScaleY"];
	[[self.viewsByName[@"Untitled"] layer] removeAnimationForKey:@"down_TranslationX"];
	[[self.viewsByName[@"Untitled"] layer] removeAnimationForKey:@"down_TranslationY"];
	[[self.viewsByName[@"loading"] layer] removeAnimationForKey:@"down_Rotation"];
	[[self.viewsByName[@"loading"] layer] removeAnimationForKey:@"down_Opacity"];
	[[self.viewsByName[@"loading"] layer] removeAnimationForKey:@"down_ImageContents"];
	[[self.viewsByName[@"loading"] layer] removeAnimationForKey:@"down_ScaleX"];
	[[self.viewsByName[@"loading"] layer] removeAnimationForKey:@"down_ScaleY"];
	[[self.viewsByName[@"loading"] layer] removeAnimationForKey:@"down_TranslationX"];
	[[self.viewsByName[@"loading"] layer] removeAnimationForKey:@"down_TranslationY"];
}

#pragma mark - up

- (void)addUpAnimation
{
	[self addUpAnimationWithBeginTime:0 andFillMode:kCAFillModeBoth andRemoveOnCompletion:NO completion:NULL];
}

- (void)addUpAnimationWithCompletion:(void (^)(BOOL finished))completionBlock
{
	[self addUpAnimationWithBeginTime:0 andFillMode:kCAFillModeBoth andRemoveOnCompletion:NO completion:completionBlock];
}

- (void)addUpAnimationAndRemoveOnCompletion:(BOOL)removedOnCompletion
{
	[self addUpAnimationWithBeginTime:0 andFillMode:removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth andRemoveOnCompletion:removedOnCompletion completion:NULL];
}

- (void)addUpAnimationAndRemoveOnCompletion:(BOOL)removedOnCompletion completion:(void (^)(BOOL finished))completionBlock
{
	[self addUpAnimationWithBeginTime:0 andFillMode:removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth andRemoveOnCompletion:removedOnCompletion completion:completionBlock];
}

- (void)addUpAnimationWithBeginTime:(CFTimeInterval)beginTime andFillMode:(NSString *)fillMode andRemoveOnCompletion:(BOOL)removedOnCompletion completion:(void (^)(BOOL finished))completionBlock
{

	if (completionBlock)
	{
		CABasicAnimation *representativeAnimation = [CABasicAnimation animationWithKeyPath:@"not.a.real.key"];
		representativeAnimation.duration = 0.000;
		representativeAnimation.delegate = self;
		[self.layer addAnimation:representativeAnimation forKey:@"Up"];
		[self.completionBlocksByAnimation setObject:completionBlock forKey:[self.layer animationForKey:@"Up"]];
	}

	CAKeyframeAnimation *loadingRotationAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.rotation.z"];
	loadingRotationAnimation.duration = 0.000;
	loadingRotationAnimation.values = @[@(3.142)];
	loadingRotationAnimation.keyTimes = @[@(0.000)];
	loadingRotationAnimation.timingFunctions = @[];
	loadingRotationAnimation.beginTime = beginTime;
	loadingRotationAnimation.fillMode = fillMode;
	loadingRotationAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"loading"] layer] addAnimation:loadingRotationAnimation forKey:@"up_Rotation"];
}

- (void)removeUpAnimation
{
	[self.layer removeAnimationForKey:@"Up"];
	[[self.viewsByName[@"loading"] layer] removeAnimationForKey:@"up_Rotation"];
}

- (void)animationDidStop:(CAAnimation *)anim finished:(BOOL)flag
{
	void (^completion)(BOOL) = [self.completionBlocksByAnimation objectForKey:anim];
	[self.completionBlocksByAnimation removeObjectForKey:anim];
	if (completion)
	{
		completion(flag);
	}
}

- (void)removeAllAnimations
{
	for (UIView *view in self.viewsByName.allValues)
	{
		[view.layer removeAllAnimations];
	}
	[self.layer removeAnimationForKey:@"Up"];
	[self.layer removeAnimationForKey:@"Down"];
}

@end